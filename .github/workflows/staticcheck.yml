name: Multi-Language Static Check

on:
  workflow_dispatch:
    inputs:
      target_repository:
        description: 'Target repository (e.g., owner/repo-name)'
        required: true
        type: string
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Checkout target repo if manual trigger
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.target_repository }}
          token: ${{ secrets.IOS_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck python3-flake8 pylint checkstyle default-jdk checkmake
          pip install mustache-lint

      # 🔎 C/C++ Check
      - name: C/C++ Analysis (clang-tidy + cppcheck)
        run: |
          mkdir -p reports
          cppcheck . 2> reports/cppcheck.txt || true
          clang-tidy $(find . -name '*.c' -o -name '*.cpp') -- 2> reports/clang-tidy.txt || true

      # 🐍 Python Lint
      - name: Python Analysis (flake8 + pylint)
        run: |
          flake8 . > reports/flake8.txt || true
          pylint $(find . -name "*.py") > reports/pylint.txt || true

      # ☕ Java Lint
      - name: Java Analysis (Checkstyle)
        run: |
          curl -LJO https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.12.4/checkstyle-10.12.4-all.jar
          find . -name "*.java" > java-files.txt
          java -jar checkstyle-10.12.4-all.jar -c /google_checks.xml -f plain -o reports/checkstyle.txt @java-files.txt || true

      # 🧰 Makefile Lint
      - name: Makefile Analysis (checkmake)
        run: |
          find . -name 'Makefile' -exec checkmake {} \; > reports/checkmake.txt || true

      # 🎭 Mustache Lint
      - name: Mustache Analysis
        run: |
          find . -name '*.mustache' -exec mustache-lint {} \; > reports/mustache.txt || true

      # 📄 Combine to HTML Report
      - name: Generate HTML Report
        run: |
          echo "<html><body><h1>Static Analysis Report</h1>" > reports/staticcheck.html
          for file in reports/*.txt; do
            echo "<h2>${file}</h2><pre>$(cat $file | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g')</pre>" >> reports/staticcheck.html
          done
          echo "</body></html>" >> reports/staticcheck.html

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: staticcheck-reports
          path: reports/
          retention-days: 14
